{"ast":null,"code":"import{useState}from'react';import'./App.css';//import About from './components/About';\nimport Navbar from'./components/Navbar';import TextForm from'./components/TextForm';import Alert from'./components/Alert';//import { BrowserRouter as Router, Route, Routes} from 'react-router-dom';\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[mode,setMode]=useState('light');//Whether dark mode is enabled or not.\nconst[alert,setAlert]=useState(null);const showAlert=(message,type)=>{setAlert({message:message,type:type});setTimeout(()=>{setAlert(null);},2000);};const toggleMode=()=>{if(mode==='light'){setMode('dark');document.body.style.backgroundColor='#162024';document.body.style.color='white';showAlert(\"Dark mode has been enabled\",\"success\");}else{setMode('light');document.body.style.backgroundColor='white';document.body.style.color='black';showAlert(\"Light mode has been enabled\",\"success\");}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Navbar,{title:\"Textutils\",mode:mode,toggleMode:toggleMode}),/*#__PURE__*/_jsx(Alert,{alert:alert}),/*#__PURE__*/_jsx(\"div\",{className:\"container my-3\",children:/*#__PURE__*/_jsx(TextForm,{heading:\"Enter the text to analyze below\",mode:mode,showAlert:showAlert})})]});}export default App;","map":{"version":3,"names":["useState","Navbar","TextForm","Alert","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","App","mode","setMode","alert","setAlert","showAlert","message","type","setTimeout","toggleMode","document","body","style","backgroundColor","color","children","title","className","heading"],"sources":["F:/SC Docs/React Projects/my-app/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport './App.css';\n//import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\n//import { BrowserRouter as Router, Route, Routes} from 'react-router-dom';\n\nfunction App() {\n  const [mode, setMode] = useState('light'); //Whether dark mode is enabled or not.\n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      message: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n      }, 2000);\n  }\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n        setMode('dark');\n        document.body.style.backgroundColor = '#162024';\n        document.body.style.color = 'white';\n        showAlert(\"Dark mode has been enabled\", \"success\");\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      document.body.style.color = 'black';\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  }\n\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar title=\"Textutils\" mode={mode} toggleMode={toggleMode}/>\n        <Alert alert={alert}/>\n        <div className='container my-3'>\n          {/* <Routes>\n            <Route exact path=\"/about\" element={<About/>}></Route>\n  <Route exact path=\"/\" element={ */}\n              <TextForm heading=\"Enter the text to analyze below\" mode={mode} showAlert={showAlert}/>\n              {/* }></Route>\n          </Routes> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,OAAO,CAChC,MAAO,WAAW,CAClB;AACA,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,QAAQ,KAAM,uBAAuB,CAC5C,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CACtC;AAAA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,QAAA,IAAAC,SAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEA,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGZ,QAAQ,CAAC,OAAO,CAAC,CAAE;AAE3C,KAAM,CAACa,KAAK,CAAEC,QAAQ,CAAC,CAAGd,QAAQ,CAAC,IAAI,CAAC,CAExC,KAAM,CAAAe,SAAS,CAAGA,CAACC,OAAO,CAAEC,IAAI,GAAK,CACnCH,QAAQ,CAAC,CACPE,OAAO,CAAEA,OAAO,CAChBC,IAAI,CAAEA,IACR,CAAC,CAAC,CACFC,UAAU,CAAC,IAAM,CACfJ,QAAQ,CAAC,IAAI,CAAC,CACd,CAAC,CAAE,IAAI,CAAC,CACZ,CAAC,CAED,KAAM,CAAAK,UAAU,CAAGA,CAAA,GAAM,CACvB,GAAIR,IAAI,GAAK,OAAO,CAAE,CAClBC,OAAO,CAAC,MAAM,CAAC,CACfQ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,SAAS,CAC/CH,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACE,KAAK,CAAG,OAAO,CACnCT,SAAS,CAAC,4BAA4B,CAAE,SAAS,CAAC,CACtD,CAAC,IACG,CACFH,OAAO,CAAC,OAAO,CAAC,CAChBQ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,OAAO,CAC7CH,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACE,KAAK,CAAG,OAAO,CACnCT,SAAS,CAAC,6BAA6B,CAAE,SAAS,CAAC,CACrD,CACF,CAAC,CAED,mBACEN,KAAA,CAAAF,SAAA,EAAAkB,QAAA,eAEIpB,IAAA,CAACJ,MAAM,EAACyB,KAAK,CAAC,WAAW,CAACf,IAAI,CAAEA,IAAK,CAACQ,UAAU,CAAEA,UAAW,CAAC,CAAC,cAC/Dd,IAAA,CAACF,KAAK,EAACU,KAAK,CAAEA,KAAM,CAAC,CAAC,cACtBR,IAAA,QAAKsB,SAAS,CAAC,gBAAgB,CAAAF,QAAA,cAIzBpB,IAAA,CAACH,QAAQ,EAAC0B,OAAO,CAAC,iCAAiC,CAACjB,IAAI,CAAEA,IAAK,CAACI,SAAS,CAAEA,SAAU,CAAC,CAAC,CAGxF,CAAC,EAER,CAAC,CAEP,CAEA,cAAe,CAAAL,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}