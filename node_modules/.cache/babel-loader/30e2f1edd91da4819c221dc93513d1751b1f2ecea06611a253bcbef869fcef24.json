{"ast":null,"code":"var _jsxFileName = \"F:\\\\SC Docs\\\\React Projects\\\\my-app\\\\src\\\\components\\\\TextForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n  const handleUppercase = () => {\n    let newText = text.toUpperCase();\n    setText(newText);\n  };\n  const handleLowercase = () => {\n    setText(text.toLowerCase());\n  };\n  const handleOnChange = event => {\n    setText(event.target.value);\n  };\n  const handleClear = () => {\n    setText(\"\");\n  };\n  const handleCopy = () => {\n    let text = document.getElementById(\"txtarea\");\n    text.select();\n    text.setSelectionRange(0, 9999);\n    navigator.clipboard.writeText(text.value);\n  };\n  const handleExtraSpaces = () => {\n    let newText = text.split(/[ ]+/);\n    setText(newText.join(\" \"));\n  };\n  const [text, setText] = useState('');\n  const txtStyle = () => {\n    if (props.mode === 'dark') {\n      let txtA = document.getElementById(\"txtarea\");\n      txtA.style.color = \"white\";\n      txtA.style.backgroundColor = \"grey\";\n    }\n    if (props.mode === \"light\") {\n      let txtAr = document.getElementById(\"txtarea\");\n      txtAr.style.color = \"black\";\n      txtAr.style.backgroundColor = \"white\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        color: props.mode === 'dark' ? 'white' : 'black'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          style: {\n            backgroundColor: props.mode === 'dark' ? 'grey' : 'white',\n            color: props.mode === 'dark' ? 'white' : 'black'\n          },\n          value: text,\n          name: \"txtarea\",\n          id: \"txtarea\",\n          onChange: handleOnChange,\n          rows: \"8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary me-2\",\n        onClick: handleUppercase,\n        children: \"Convert to Uppercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary me-2\",\n        onClick: handleLowercase,\n        children: \"Convert to Lowercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary me-2\",\n        onClick: handleCopy,\n        children: \"Copy Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary me-2\",\n        onClick: handleExtraSpaces,\n        children: \"Remove Extra Spaces\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        onClick: handleClear,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      style: {\n        color: props.mode === 'dark' ? 'white' : 'black'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your text summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [text.length === 0 ? 0 : text.split(\" \").length, \" words, \", text.length, \" characters\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [text.length === 0 ? 0 : text.split(\" \").length * 0.008, \" minutes read\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: text.length > 0 ? text : \"Enter something to preview it here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(TextForm, \"M8VhbSOru85VOsk7T2j5DvKRp+M=\");\n_c = TextForm;\nTextForm.propTypes = {\n  heading: PropTypes.string.isRequired\n};\nTextForm.defaultProps = {\n  text: 'Enter text here'\n};\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","PropTypes","jsxDEV","_jsxDEV","Fragment","_Fragment","TextForm","props","_s","handleUppercase","newText","text","toUpperCase","setText","handleLowercase","toLowerCase","handleOnChange","event","target","value","handleClear","handleCopy","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","handleExtraSpaces","split","join","txtStyle","mode","txtA","style","color","backgroundColor","txtAr","children","className","heading","fileName","_jsxFileName","lineNumber","columnNumber","name","id","onChange","rows","type","onClick","length","_c","propTypes","string","isRequired","defaultProps","$RefreshReg$"],"sources":["F:/SC Docs/React Projects/my-app/src/components/TextForm.js"],"sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUppercase = () => {\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n    }\r\n\r\n    const handleLowercase = () => {\r\n        setText(text.toLowerCase());\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const handleClear = () => {\r\n        setText(\"\");\r\n    }\r\n\r\n    const handleCopy = () => {\r\n        let text = document.getElementById(\"txtarea\");\r\n        text.select();\r\n        text.setSelectionRange(0, 9999);\r\n        navigator.clipboard.writeText(text.value);\r\n    }\r\n\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n    }\r\n\r\n    const [text, setText] = useState('');\r\n\r\n    const txtStyle = () => {\r\n        if (props.mode === 'dark') {\r\n            let txtA = document.getElementById(\"txtarea\");\r\n            txtA.style.color = \"white\";\r\n            txtA.style.backgroundColor = \"grey\";\r\n        }\r\n        if(props.mode === \"light\"){\r\n            let txtAr = document.getElementById(\"txtarea\");\r\n            txtAr.style.color = \"black\";\r\n            txtAr.style.backgroundColor = \"white\";\r\n        }\r\n    }\r\n\r\n  return (\r\n    <>\r\n        <div className='container' style={{color: props.mode === 'dark'?'white':'black'}}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n\r\n        <textarea className=\"form-control\" style={{backgroundColor: props.mode === 'dark'?'grey':'white', color: props.mode === 'dark'?'white':'black'}} value={text} name='txtarea' id=\"txtarea\" onChange={handleOnChange} rows=\"8\"></textarea>\r\n        </div>\r\n        <button type=\"button\" className=\"btn btn-primary me-2\" onClick={handleUppercase}>Convert to Uppercase</button>\r\n        <button type=\"button\" className=\"btn btn-primary me-2\" onClick={handleLowercase}>Convert to Lowercase</button>\r\n        <button type=\"button\" className=\"btn btn-primary me-2\" onClick={handleCopy}>Copy Text</button>\r\n        <button type=\"button\" className=\"btn btn-primary me-2\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={handleClear}>Clear</button>\r\n        </div>\r\n        <div className='container my-3' style={{color: props.mode === 'dark'?'white':'black'}}>\r\n            <h2>Your text summary</h2>\r\n            <p>{(text.length === 0) ? 0:text.split(\" \").length} words, {text.length} characters</p>\r\n            <p>{(text.length === 0) ? 0:text.split(\" \").length * 0.008} minutes read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length > 0 ? text : \"Enter something to preview it here\"}</p>\r\n        </div>\r\n    </>\r\n  )\r\n}\r\nTextForm.propTypes = {heading: PropTypes.string.isRequired};\r\nTextForm.defaultProps = {text: 'Enter text here'}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}